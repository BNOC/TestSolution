// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Test.Api.Data;

#nullable disable

namespace Test.Api.Migrations
{
    [DbContext(typeof(TestDbContext))]
    [Migration("20220421115533_InitialSetup")]
    partial class InitialSetup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Test.Api.Entities.Box", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShedId");

                    b.ToTable("Boxes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Box 1",
                            ShedId = 1
                        });
                });

            modelBuilder.Entity("Test.Api.Entities.Shed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sheds");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Brown Shed"
                        });
                });

            modelBuilder.Entity("Test.Api.Entities.Thing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BoxId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BoxId");

                    b.ToTable("Things");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BoxId = 1,
                            Name = "Spanner"
                        },
                        new
                        {
                            Id = 2,
                            BoxId = 1,
                            Name = "Wrench"
                        },
                        new
                        {
                            Id = 3,
                            BoxId = 1,
                            Name = "Screwdriver"
                        },
                        new
                        {
                            Id = 4,
                            BoxId = 1,
                            Name = "Socket"
                        });
                });

            modelBuilder.Entity("Test.Api.Entities.Box", b =>
                {
                    b.HasOne("Test.Api.Entities.Shed", "Shed")
                        .WithMany("Boxes")
                        .HasForeignKey("ShedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shed");
                });

            modelBuilder.Entity("Test.Api.Entities.Thing", b =>
                {
                    b.HasOne("Test.Api.Entities.Box", "Box")
                        .WithMany("Things")
                        .HasForeignKey("BoxId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Box");
                });

            modelBuilder.Entity("Test.Api.Entities.Box", b =>
                {
                    b.Navigation("Things");
                });

            modelBuilder.Entity("Test.Api.Entities.Shed", b =>
                {
                    b.Navigation("Boxes");
                });
#pragma warning restore 612, 618
        }
    }
}
